AWSTemplateFormatVersion: "2010-09-09"
Description: Despligue EC2

Parameters:
  KeyName:
    Description: Name of an existing EC2 KeyPair to enable SSH access to the instance
    Type: AWS::EC2::KeyPair::KeyName
    Default: 'vockey'
    
  EC2AMI:
    Type: AWS::SSM::Parameter::Value<AWS::EC2::Image::Id
    Default: '/aws/service/canonical/ubuntu/server/20.04/stable/current/amd64/hvm/ebs-gp2/ami-id'
  
  InstanceType:
    Description: WebServer EC2 instance type
    Type: String
    Default: t2.micro
    AllowedValues: [t2.micro]
    ConstraintDescription: must be a valid EC2 instance type.

  SSHLocation:
    Description: The IP address range that can be used to SSH to the EC2 instances
    Type: String
    MinLength: '9'
    MaxLength: '18'
    Default: 0.0.0.0/0
    AllowedPattern: "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})"
    ConstraintDescription: must be a valid IP CIDR range of the form x.x.x.x/x.

Resources:

  SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Acesso SSH y web en 8080
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: '22'
          ToPort: '22'
          CidrIp:
            Ref: SSHLocation
        - IpProtocol: tcp
          FromPort: '8080'
          ToPort: '8080'
          CidrIp:
            Ref: SSHLocation
      Tags:
        - Key: Name
          Value: !Ref AWS::StackName

  EC2Instance:
    Type: AWS::EC2::Instance
    CreationPolicy:
      ResourceSignal:
        Timeout: PT7M
        Count: '1'
    Metadata:
      AWS::CloudFormation::Init:
        configSets:
          full_install:
          - install_and_enable_cfn_hup
        install_and_enable_cfn_hup:
          files:
            "/etc/cfn/cfn-hup.conf":
              content:
                Fn::Join:
                - ''
                - - "[main]\n"
                  - stack=
                  - Ref: AWS::StackId
                  - "\n"
                  - region=
                  - Ref: AWS::Region
                  - "\n"
              mode: '000400'
              owner: root
              group: root
            "/etc/cfn/hooks.d/cfn-auto-reloader.conf":
              content:
                Fn::Join:
                - ''
                - - "[cfn-auto-reloader-hook]\n"
                  - "triggers=post.update\n"
                  - "path=Resources.EC2Instance.Metadata.AWS::CloudFormation::Init\n"
                  - "action=/opt/aws/bin/cfn-init -v"
                  - "--stack "
                  - Ref: AWS::StackName
                  - " --resource EC2Instance"
                  - " --configsets full_install"
                  - " --region "
                  - Ref: AWS::Region
                  - "\n"
                  - "runas=root"
            "/lib/systemd/system/cfn-hup.service":
              content:
                Fn::Join:
                  - ''
                  - - "[Unit]\n"
                    - "Description=cfn-hup daemon\n\n"
                    - "[Service]\n"
                    - "Type=simple\n"
                    - "ExecStart=/opt/aws/bin/cfn-hup\n"
                    - "Restart=always\n\n"
                    - "[Install]\n"
                    - "WantedBy=multi-user.target"
          commands:
            01enable_cfn_hup:
              command: systemctl enable cfn-hup.service
            02start_cfn_hup:
              command: systemctl start cfn-hup.service
    Properties:
      ImageId: !Ref EC2AMI
      KeyName: !Ref KeyName
      InstanceType: !Ref InstanceType
      SecurityGroupIds: 
        - !Ref SecurityGroup
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash -xe
          exec > /tmp/userdata.log 2>&1

          # Actualizar todas las apps
          apt update -y

          # Instalar AWS helper scripts de CloudFormation
          mkdir -p /opt/aws/bin
          wget https://s3.amazonaws.com/cloudformation-examples/aws-cfn-bootstrap-py3-latest.tar.gz
          python3 -m easy_install --script-dir /opt/aws/bin aws-cfn-bootstrap-py3-latest.tar.gz
          ln -s /root/aws-cfn-bootstrap-latest/init/ubuntu/cfn-hup /etc/init.d/cfn-hup
          /opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource EC2Instance --configsets full_install --region ${AWS::Region}

          # Instalamos code deploy
          sudo apt update -y
          sudo apt install ruby-full -y
          sudo apt install wget -y
          cd /home/ubuntu
          wget https://aws-codedeploy-${AWS::Region}.s3.${AWS::Region}.amazonaws.com/latest/install
          chmod +x ./install
          sudo ./install auto > /tmp/logfile
          sudo service codedeploy-agent start

          # Esta tiene que ser la ultima instrucción (da la señal de que ha terminado)
          /opt/aws/bin/cfn-signal -e $? --stack ${AWS::StackName} --resource EC2Instance --region ${AWS::Region}
      Tags:
        - Key: Name
          Value: !Ref AWS::StackName
      IamInstanceProfile: 'LabInstanceProfile'

Outputs:
  InstanceId:
    Description: 'InstanceId of the newly created EC2 instance'
    Value: !Sub "http://${EC2Instance.PublicDnsName}:8080"
    Export:
      Name: "InstanceId"